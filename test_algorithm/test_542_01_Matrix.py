import pytest
from ..tools.time_limit import time_limit
from ..tools.time_measure import time_measure
from ..algorithm_src.my19_542_01_Matrix import Solution


@pytest.fixture()
def prep():
    yield Solution()


cases = [
    ([[0, 0, 0],
      [0, 1, 0],
      [0, 0, 0]], [[0, 0, 0],
                   [0, 1, 0],
                   [0, 0, 0]]),
    ([[0, 0, 0],
      [0, 1, 0],
      [1, 1, 1]], [[0, 0, 0],
                   [0, 1, 0],
                   [1, 2, 1]]),
    ([[0, 1, 1, 0, 0],
      [0, 1, 1, 0, 0],
      [0, 1, 0, 0, 1],
      [1, 1, 1, 1, 0],
      [1, 0, 0, 1, 0]], [[0, 1, 1, 0, 0],
                         [0, 1, 1, 0, 0],
                         [0, 1, 0, 0, 1],
                         [1, 1, 1, 1, 0],
                         [1, 0, 0, 1, 0]]),
    ([[0, 0, 0, 0, 0],
      [1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1],
      [0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0],
                         [1, 1, 1, 1, 1],
                         [2, 2, 2, 2, 2],
                         [1, 1, 1, 1, 1],
                         [0, 0, 0, 0, 0]]),
    ([[1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1],
      [0, 0, 0, 0, 0]], [[4, 4, 4, 4, 4],
                         [3, 3, 3, 3, 3],
                         [2, 2, 2, 2, 2],
                         [1, 1, 1, 1, 1],
                         [0, 0, 0, 0, 0]]),
    ([[1, 1, 0, 0, 1, 0, 0, 1, 1, 0],
      [1, 0, 0, 1, 0, 1, 1, 1, 1, 1],
      [1, 1, 1, 0, 0, 1, 1, 1, 1, 0],
      [0, 1, 1, 1, 0, 1, 1, 1, 1, 1],
      [0, 0, 1, 1, 1, 1, 1, 1, 1, 0],
      [1, 1, 1, 1, 1, 1, 0, 1, 1, 1],
      [0, 1, 1, 1, 1, 1, 1, 0, 0, 1],
      [1, 1, 1, 1, 1, 0, 0, 1, 1, 1],
      [0, 1, 0, 1, 1, 0, 1, 1, 1, 1],
      [1, 1, 1, 0, 1, 0, 1, 1, 1, 1]], [[2, 1, 0, 0, 1, 0, 0, 1, 1, 0],
                                        [1, 0, 0, 1, 0, 1, 1, 2, 2, 1],
                                        [1, 1, 1, 0, 0, 1, 2, 2, 1, 0],
                                        [0, 1, 2, 1, 0, 1, 2, 3, 2, 1],
                                        [0, 0, 1, 2, 1, 2, 1, 2, 1, 0],
                                        [1, 1, 2, 3, 2, 1, 0, 1, 1, 1],
                                        [0, 1, 2, 3, 2, 1, 1, 0, 0, 1],
                                        [1, 2, 1, 2, 1, 0, 0, 1, 1, 2],
                                        [0, 1, 0, 1, 1, 0, 1, 2, 2, 3],
                                        [1, 2, 1, 0, 1, 0, 1, 2, 3, 4]]),
    ([[1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1],
      [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1],
      [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1],
      [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1],
      [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1],
      [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0],
      [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1],
      [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],
      [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1],
      [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0],
      [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1],
      [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1],
      [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1],
      [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1],
      [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0],
      [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1],
      [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0],
      [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1],
      [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0],
      [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1],
      [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1],
      [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1],
      [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0],
      [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1],
      [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0],
      [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1],
      [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0]],

     [[4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 0, 1, 2],
      [3, 2, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 2, 1, 1, 2, 2, 1, 1, 0, 1, 1, 1, 2, 1, 0, 1, 0, 0, 1],
      [2, 3, 2, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 2],
      [1, 2, 1, 1, 1, 0, 1, 1, 2, 2, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 1],
      [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1],
      [1, 0, 1, 1, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0],
      [2, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 2, 1, 2, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1],
      [1, 2, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],
      [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 2, 2, 1, 0, 1, 0, 1, 1, 1, 2, 1, 0, 0, 1, 0, 1],
      [1, 1, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 3, 2, 1, 1, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 1, 1],
      [2, 2, 1, 1, 1, 2, 1, 1, 0, 1, 2, 2, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0],
      [1, 2, 2, 1, 0, 1, 0, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1],
      [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 1, 0, 1, 2, 1, 1, 0, 1, 0, 0, 0, 1],
      [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 0, 0, 1, 1, 1, 2],
      [1, 2, 2, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1],
      [2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 3, 2, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0],
      [2, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1],
      [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 2, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 2, 1, 0],
      [2, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 2, 2, 1, 0, 1, 0, 0, 0, 0, 1, 2, 1],
      [2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0],
      [1, 0, 0, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 2, 1, 0, 1, 1, 1, 2, 1, 0, 1, 1],
      [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1],
      [1, 2, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 1, 2, 1, 0, 1, 1, 1, 2, 1, 2, 1, 2],
      [1, 1, 0, 0, 1, 2, 2, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 2, 2, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1],
      [0, 0, 0, 1, 2, 3, 3, 2, 1, 0, 1, 1, 1, 0, 0, 1, 1, 2, 3, 2, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0],
      [1, 1, 0, 1, 1, 2, 2, 1, 2, 1, 1, 0, 1, 1, 0, 0, 1, 2, 2, 1, 0, 1, 0, 0, 0, 0, 0, 1, 2, 1],
      [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 2, 2, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0],
      [2, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 2, 1, 0, 0, 1, 1, 2, 2, 1, 1, 2, 2, 1],
      [1, 2, 2, 1, 1, 0, 0, 1, 2, 1, 2, 1, 2, 2, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1, 0, 0, 1, 2, 1],
      [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 2, 2, 1, 0, 0, 1, 2, 1, 2, 2, 1, 0, 0, 0, 1, 1, 0, 1, 0]]
     ),

    ([[1] * 1000 + [0]], [[i for i in range(1000, -1, -1)]]),
]


@pytest.mark.parametrize('case', cases)
def test(prep, case):
    assert prep.updateMatrix(case[0]) == case[1]
